name: Build Workflow

on:
  push:
  workflow_dispatch:
    
jobs:
  autobuild:
    permissions:
      packages: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve existing version from file
        id: retrieve-version
        run: |
          existing_version=$(cat .github/autobuild_version 2>/dev/null || echo "0")
          echo "existing_version=$existing_version" >> $GITHUB_ENV

      - name: Generate version based on Date Versioning (YYYY.MM.DD)
        id: generate-version
        run: |
          current_date=$(date +'%Y.%m.%d')
          existing_version="${{ env.existing_version }}"

          version_parts=(${existing_version//./ })
          subversion=${version_parts[3]:-0}  # Get the existing subversion or set to 0 if absent

          if [[ "$subversion" != "0" && "${existing_version%.*}" == "$current_date" ]]; then
            incremented_subversion=$((subversion + 1))
            version="${existing_version%.*}.$incremented_subversion"
          elif [[ "$existing_version" == "$current_date" ]]; then
            incremented_subversion=$((subversion + 1))
            version="$current_date.$incremented_subversion"
          else
            version="$current_date"
          fi

          echo "version=$version" >> $GITHUB_ENV

      - name: Save generated version to file
        id: save-version
        run: |
          echo "${{ env.version }}" > .github/autobuild_version
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .github/autobuild_version
          git commit -m "Update autobuild_version"
          git push origin $GITHUB_REF
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download dependencies
        run: |
          curl -o emailproxy.py https://raw.githubusercontent.com/simonrob/email-oauth2-proxy/main/emailproxy.py

      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/shymega/email-oauth2-proxy-docker:latest

